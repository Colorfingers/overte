<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//  sdf_text3D.vert
//  vertex shader
//
//  Created by Brad Davis on 10/14/13.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include gpu/ShaderConstants.h@>
INPUT(GPU_ATTR_POSITION, vec4, inPosition);
INPUT(GPU_ATTR_TEXCOORD0, vec4, inTexCoord0);

<@include gpu/Transform.slh@>
<@include render-utils/ShaderConstants.h@>

<@include gpu/Transform.slh@>
<$declareStandardTransform()$>

<@include sdf_text3D.slh@>

OUTPUT(RENDER_UTILS_ATTR_POSITION_ES, vec4, _positionES);
OUTPUT(RENDER_UTILS_ATTR_NORMAL_WS, vec3, _normalWS);
OUTPUT(RENDER_UTILS_ATTR_COLOR, vec4, _color);
OUTPUT(RENDER_UTILS_ATTR_TEXCOORD01, vec4, _texCoord01);

void main() {
    _texCoord01.xy = inTexCoord0.xy;
    _color = color_sRGBAToLinear(params.color);
    
    // standard transform
    TransformCamera cam = getTransformCamera();
    TransformObject obj = getTransformObject();
    <$transformModelToEyeAndClipPos(cam, obj, inPosition, _positionES, gl_Position)$>
    const vec3 normal = vec3(0, 0, 1);
    <$transformModelToWorldDir(cam, obj, normal, _normalWS)$>
}