<@include gpu/Config.slh@>
<$VERSION_HEADER$>
// <$_SCRIBE_FILENAME$> 
// Generated on <$_SCRIBE_DATE$>
//
//  Created by Hifi Engine Team.
//  Copyright 2014 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include gpu/ShaderConstants.h@>
INPUT(GPU_ATTR_POSITION, vec4, inPosition);


<@include gpu/Transform.slh@>
<@include graphics/Material.slh@>
<@include graphics/MaterialTextures.slh@>

<$declareStandardTransform()$>
<$declareMaterialTexMapArrayBuffer()$>

<@include render-utils/ShaderConstants.h@>

OUTPUT(RENDER_UTILS_ATTR_POSITION_WS, vec4, _positionWS);
OUTPUT(RENDER_UTILS_ATTR_TEXCOORD01, vec4, _texCoord01);

void main(void) {
    // standard transform
    TransformCamera cam = getTransformCamera();
    TransformObject obj = getTransformObject();
    <$transformModelToClipPos(cam, obj, inPosition, gl_Position)$>
    <$transformModelToWorldPos(obj, inPosition, _positionWS)$>

    Material mat = getMaterial();
    BITFIELD matKey = getMaterialKey(mat);
    _texCoord01 = vec4(0.0, 0.0, 0.0, 0.0);
    // If we have an opacity mask than we need the first tex coord
    if ((matKey & OPACITY_MASK_MAP_BIT) != 0) {
        TexMapArray texMapArray = getTexMapArray();
        <$evalTexMapArrayTexcoord0(texMapArray, inTexCoord0, _positionWS, _texCoord01.xy)$>
    }
}
